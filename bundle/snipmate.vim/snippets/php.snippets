snippet php
	<?php
	${1}
	?>
snippet phps
	<?php
	${1}
snippet phpn
	<?php ${1} ?>${2}
snippet ec
	echo "${1:string}"${2};${3}
snippet phpec
	<?php echo ${1};${2}?>${3}
snippet inc
	include '${1:file}';${2}
snippet inc1
	include_once '${1:file}';${2}
snippet req
	require '${1:file}';${2}
snippet req1
	require_once '${1:file}';${2}
# $GLOBALS['...']
snippet globals
	$GLOBALS['${1:variable}']${2: = }${3:something}${4:;}${5}
snippet $_ COOKIE['...']
	$_COOKIE['${1:variable}']${2}
snippet $_ ENV['...']
	$_ENV['${1:variable}']${2}
snippet $_ FILES['...']
	$_FILES['${1:variable}']${2}
snippet $_ Get['...']
	$_GET['${1:variable}']${2}
snippet $_ POST['...']
	$_POST['${1:variable}']${2}
snippet $_ REQUEST['...']
	$_REQUEST['${1:variable}']${2}
snippet $_ SERVER['...']
	$_SERVER['${1:variable}']${2}
snippet $_ SESSION['...']
	$_SESSION['${1:variable}']${2}
# Start Docblock
snippet /*
	/**
	 * ${1}
	 **/
# Class - post doc
snippet doc_cp
	/**
	 * ${1:undocumented class}
	 *
	 * @package ${2:default}
	 * @author ${3:`g:snips_author`}
	**/${4}
# Class Variable - post doc
snippet doc_vp
	/**
	 * ${1:undocumented class variable}
	 *
	 * @var ${2:string}
	 **/${3}
# Class Variable
snippet doc_v
	/**
	 * ${3:undocumented class variable}
	 *
	 * @var ${4:string}
	 **/
	${1:var} $${2};${5}
# Class
snippet doc_c
	/**
	 * ${3:undocumented class}
	 *
	 * @packaged ${4:default}
	 * @author ${5:`g:snips_author`}
	 **/
	${1:}class ${2:}
	{${6}
	} // END $1class $2
# Constant Definition - post doc
snippet doc_dp
	/**
	 * ${1:undocumented constant}
	 **/${2}
# Constant Definition
snippet doc_d
	/**
	 * ${3:undocumented constant}
	 **/
	define(${1}, ${2});${4}
# Function - post doc
snippet doc_fp
	/**
	 * ${1:undocumented function}
	 *
	 * @return ${2:void}
	 * @author ${3:`g:snips_author`}
	 **/${4}
# Function signature
snippet doc_s
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3});${7}
# Function
snippet doc_f
	/**
	 * ${4:undocumented function}
	 *
	 * @return ${5:void}
	 * @author ${6:`g:snips_author`}
	 **/
	${1}function ${2}(${3})
	{${7}
	}
# Header
snippet doc_h
	/**
	 * ${1}
	 *
	 * @author ${2:`g:snips_author`}
	 * @version ${3:$Id$}
	 * @copyright ${4:$2}, `strftime('%d %B, %Y')`
	 * @package ${5:default}
	 **/
	
	/**
	 * Define DocBlock
	 *//
# Interface
snippet doc_i
	/**
	 * ${2:undocumented class}
	 *
	 * @package ${3:default}
	 * @author ${4:`g:snips_author`}
	 **/
	interface ${1:}
	{${5}
	} // END interface $1
# class ...
snippet class
	/**
	 * ${1}
	 **/
	class ${2:ClassName}
	{
		${3}
		function ${4:__construct}(${5:argument})
		{
			${6:// code...}
		}
	}
# define(...)
snippet def
	define('${1}'${2});${3}
# defined(...)
snippet def?
	${1}defined('${2}')${3}
snippet wh
	while (${1:/* condition */}) {
		${2:// code...}
	}
# do ... while
snippet do
	do {
		${2:// code... }
	} while (${1:/* condition */});
snippet if
	if (${1:/* condition */}) {
		${2:// code...}
	}
snippet ife
	if (${1:/* condition */}) {
		${2:// code...}
	} else {
		${3:// code...}
	}
	${4}
snippet else
	else {
		${1:// code...}
	}
snippet elseif
	elseif (${1:/* condition */}) {
		${2:// code...}
	}
# Tertiary conditional
snippet t
	$${1:retVal} = (${2:condition}) ? ${3:a} : ${4:b};${5}
snippet switch
	switch ($${1:variable}) {
		case '${2:value}':
			${3:// code...}
			break;
		${5}
		default:
			${4:// code...}
			break;
	}
snippet case
	case '${1:value}':
		${2:// code...}
		break;${3}
snippet for
	for ($${2:i} = 0; $$2 < ${1:count}; $$2${3:++}) {
		${4: // code...}
	}
snippet foreach
	foreach ($${1:variable} as $${2:key}) {
		${3:// code...}
	}
snippet fun
	${1:public }function ${2:FunctionName}(${3})
	{
		${4:// code...}
	}
# $... = array (...)
snippet array
	$${1:arrayName} = array('${2}' => ${3});${4}

#####################################################################################################
##               ADD BY NEIL
#####################################################################################################
snippet foreachk 
	foreach ($${1:variable} as $${2:key} => $${3:value}) {
		${4:// code...}
	}

snippet get "get"
	$_GET['${1}']${2}

snippet log "log"
	error_log(var_export(${1}, true));${2}

snippet post "post"
	$_POST['${1}']${2}

snippet session "session"
	$_SESSION['${1}']${2}

snippet var "var"
	var_export(${1});${2}

snippet getter "PHP Class Getter" b
	/**
	 * Getter for $1
	 *
	 * ${2:return string}
	 */
	public function get${1/\w+\s*/\u$0/}()
	{
		return $this->$1;$3
	}

snippet setter "PHP Class Setter" b
	/**
	 * Setter for $1
	 *
	 * @param ${2:string} $$1                                                                                                                               
	 * @return ${3:`!p snip.rv=snip.basename`}
	 */
	public function set${1/\w+\s*/\u$0/}(${4:${2/(void|string|int|integer|double|float|object|boolear|null|mixed|number|resource)|(.*)/(?1::$2 )/}}$$1)
	{
		$this->$1 = $$1;$5

		${6:return $this;}
	}
	$0

snippet gs "PHP Class Getter Setter" b
	/**
	 * Getter for $1
	 *
	 * return ${2:string}
	 */
	public function get${1/\w+\s*/\u$0/}()
	{
		return $this->$1;$3
	}

	/**
	 * Setter for $1
	 *
	 * @param $2 $$1
	 * @return ${4:`!p snip.rv=snip.basename`}
	 */
	public function set${1/\w+\s*/\u$0/}(${5:${2/(void|string|int|integer|double|float|object|boolear|null|mixed|number|resource)|(.*)/(?1::$2 )/}}$$1)
	{
		$this->$1 = $$1;$6

		${7:return $this;}
	}
	$0

snippet pub "Public function" b
	/**
	 * ${3:undocumented function}
	 *
	 * @return ${4:void}
	 */
	public function ${1:name}(${2:$param})
	{
		${VISUAL}${5:return null;}
	}
	$0

snippet pro "Protected function" b
	/**
	 * ${3:undocumented function}
	 *
	 * @return ${4:void}
	 */
	protected function ${1:name}(${2:$param})
	{
		${VISUAL}${5:return null;}
	}
	$0

snippet pri "Private function" b
	/**
	 * ${3:undocumented function}
	 *
	 * @return ${4:void}
	 */
	private function ${1:name}(${2:$param})
	{
		${VISUAL}${5:return null;}
	}
	$0

snippet pubs "Public static function" b
	/**
	 * ${3:undocumented function}
	 *
	 * @return ${4:void}
	 */
	public static function ${1:name}(${2:$param})
	{
		${VISUAL}${5:return null;}
	}
	$0
	
snippet pros "Protected static function" b
	/**
	 * ${3:undocumented function}
	 *
	 * @return ${4:void}
	 */
	protected static function ${1:name}(${2:$param})
	{
		${VISUAL}${5:return null;}
	}
	$0
	
snippet pris "Private static function" b
	/**
	 * ${3:undocumented function}
	 *
	 * @return ${4:void}
	 */
	private static function ${1:name}(${2:$param})
	{
		${VISUAL}${5:return null;}
	}
	$0
